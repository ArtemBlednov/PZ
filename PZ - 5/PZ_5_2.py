'''Описать функцию RectPS(x1,y1,х2,y2,P,S), вычисляющую периметр P и площадь S
прямоугольника со сторонами, параллельными осям координат, по координатам (х1,
y1), (х2, y2) его противоположных вершин (x1, y1, x2, y2 — входные, P и S —
выходные параметры вещественного типа). С помощью этой функции найти
периметры и площади трех прямоугольников с данными противоположными
вершинами.'''
from tkinter.ttk import Treeview


def RectPS(x1, x2, y1, y2):

    length = abs(x2 - x1) # Находим длину
    width = abs(y2 - y1) # Находим ширину

    P = 2 * (length + width)
    S = length * width

    return P, S

# Обработка исключений
while True:
    try:
        # Ввод значений для 1 прямоугольника
        x1, x2, y1, y2 = [int(input(f'Введите значение для {i}: ')) for i in ['x1', 'x2', 'y1', 'y2']]
        break
    except ValueError:
        print('Ошибка: Введите корректные числа заново!')

P, S = RectPS(x1, x2, y1, y2)

print(f'Периметр 1 прямоугольника равен - {P}, площадь - {S}')
######################################################################################################

# Обработка исключений
while True:
    try:
        # Ввод значений для 2 прямоугольника
        x1, x2, y1, y2 = [int(input(f'Введите значение для {i}: ')) for i in ['x1', 'x2', 'y1', 'y2']]
        break
    except ValueError:
        print('Ошибка: Введите корректные числа заново!')

P, S = RectPS(x1, x2, y1, y2)

print(f'Периметр 2 прямоугольника равен - {P}, площадь - {S}')
######################################################################################################

# Обработка исключений
while True:
    try:
        # Ввод значений для 3 прямоугольника
        x1, x2, y1, y2 = [int(input(f'Введите значение для {i}: ')) for i in ['x1', 'x2', 'y1', 'y2']]
        break
    except ValueError:
        print('Ошибка: Введите корректные числа заново!')

P, S = RectPS(x1, x2, y1, y2)

print(f'Периметр 3 прямоугольника равен - {P}, площадь - {S}')
######################################################################################################